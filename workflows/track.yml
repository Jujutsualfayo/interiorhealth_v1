name: CI/CD Pipeline

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to build and test the app
  build:
    runs-on: ubuntu-latest
    
    services:
      # Set up a database (optional, depending on your app)
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: > 
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      # Step 1: Check out the code from the repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Run tests (if you have tests set up)
      - name: Run tests
        run: |
          pytest

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t interior-health-app .

  # Job to deploy the app
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up DockerHub login (requires DockerHub credentials in GitHub secrets)
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build and push Docker image to DockerHub
      - name: Build and push Docker image
        run: |
          docker build -t your-dockerhub-username/interior-health-app .
          docker tag your-dockerhub-username/interior-health-app:latest
          docker push your-dockerhub-username/interior-health-app:latest

      # Deploy to a cloud platform (Heroku in this example)
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          heroku container:push web --app your-heroku-app-name
          heroku container:release web --app your-heroku-app-name

